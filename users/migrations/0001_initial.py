# Generated by Django 2.2.3 on 2019-12-28 11:45

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
        ('function_settings', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('account_num', models.CharField(default=0, max_length=30, verbose_name='分配的账号个数')),
                ('phone', models.CharField(blank=True, max_length=11, null=True, verbose_name='手机号码')),
                ('remaining_accounts', models.IntegerField(blank=True, null=True, verbose_name='剩余的账号数量')),
                ('increase_time', models.IntegerField(default=0, help_text='单位是：天', null=True, verbose_name='添加时间')),
                ('over_time', models.IntegerField(blank=True, null=True, verbose_name='过期时间')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户管理',
                'verbose_name_plural': '用户管理',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Account_manage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_name', models.CharField(blank=True, default=users.models.generate_random_str, help_text='创建账号时会自动生成账号及密码！', max_length=30, unique=True, verbose_name='账号用户名')),
                ('password', models.CharField(blank=True, default=users.models.generate_random_str, max_length=30, verbose_name='账号密码')),
                ('operation_type', models.IntegerField(help_text='0:养号,1:大V养号,2:发私信', null=True, verbose_name='操作类型')),
                ('big_v', models.CharField(max_length=50, null=True, verbose_name='大V账号')),
                ('status', models.CharField(choices=[('1', '开启'), ('0', '关闭')], default='1', max_length=2, verbose_name='状态')),
                ('equipment_id', models.CharField(blank=True, max_length=40, null=True, verbose_name='设备ID')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('function_setup', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='account_manage', to='function_settings.Function_setup', verbose_name='功能设置')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='account', to=settings.AUTH_USER_MODEL, verbose_name='用户信息')),
            ],
            options={
                'verbose_name': '账号管理',
                'verbose_name_plural': '账号管理',
            },
        ),
    ]
